В данном примере реализована архитектура по типу Стейт машины. То есть мы храним текущее состояния, которое может быть изменено во время работы на другое. Состояния есть как у бизнес логики, так и у view.

ViewController - отвечает за отображение, на основе состояния
ViewModel - отвечает за преобразование бизнес данных, в модели для отображения
Router - отвечает за переходы между экранами
Executor - выполняет бизнес логику над данными, и передает в хранилище, как состояние должно измениться. Так же может передавать действия для отображения, без необходимости менять состояние данных (например показ ошибки)
Reducer - преобразует состояние на основе входящих сигналов
Builder - конструктор ViewController